language: go
matrix:
  include:
  - go: '1.11'
  - go: '1.12'
  - go: '1.13'
    env: LATEST=true
  - go: tip
env:
  global:
  - UPXVER="3.95"
before_install:
- go get github.com/mitchellh/gox
- go get github.com/konsorten/go-windows-terminal-sequences
install:
- go get -v -t ./...
- echo "Installing upx .."
- "{ [ -f upx/${UPXVER}/upx ]; } || { curl -OL https://github.com/upx/upx/releases/download/v${UPXVER}/upx-${UPXVER}-amd64_linux.tar.xz;
  tar xvf upx-${UPXVER}-amd64_linux.tar.xz; mkdir -p upx; mv upx-${UPXVER}-amd64_linux
  upx/${UPXVER}; }"
- export PATH="${TRAVIS_BUILD_DIR}/upx/${UPXVER}/:${PATH}"
- upx --version | grep -E '^upx'
script:
- export GIT_EXEC_PATH=$GIT_DIST_PATH
- export PATH=$GIT_DIST_PATH:$PATH
- make test-coverage
- go vet ./...
- if [ "${LATEST}" = "true" ]; then gox -os="linux darwin windows" -arch="amd64" -output="docker-hub-cli.{{.OS}}.{{.Arch}}"
  -ldflags "-s -w -X main.Rev=`git rev-parse --short HEAD`" -verbose ./...; fi
- if [ "${LATEST}" = "true" ]; then upx docker-hub-cli.*; fi
after_success:
- bash <(curl -s https://codecov.io/bash)

deploy:
  provider: releases
  api_key:
    secure: cIuAFiTpFnf+l7ohqBQ2NHz6rkFmJ7FUk4nzGC2uZkXPvnWuR6uiAuPYwKcHy7OR0U21n3i7hcB9RYoEfIIoxtb7JmwEeUU206OArVW40bpyv4MbQrD+geJ5XrP8Fw+rAX/o42/rRugXbsU1E/pVSECrs+x97b65mUXOXLCefa6mTyC+ljMrt6uZvGAx75/4pPfsdgIfBeOfMQ7hPz4ohCUn36Zg4kY4am68BjtZOMagarjHxA9KNf+kdoHZCBptZzqWj1N33ndqozSYjPYIcopwjyY+C+STldYxEthGQukmhk993dk466huva2WOxOHsv95CaRJgaM6alL2BHDwrbUm+7VV5LWaeOUqzEbooek+iPiR/n2tDvnMp+5WE1qLo5n+gDWfnIG2/Msmmfp7eG/A1Jahf3b8E1CLmKEWoGWBKpVeNSCVvN+dTQPQvfsAzCIaRqaes41/TRUk/v4xJrSuzxJ0rJgEVWgYvF6mOVkHgTu2zPXifXQo+JkzZYPvKn5Oe02P5w4pdegIWESB0KH9zp7Yop9jZmmOLQfZoPWbMeYnq0fHIkFCOiLC3DenCxoPAdwzQpHo74/b3UIAx3xTSXXwpco2mwirPnFZoh1RQ12eiDlL5CzO464RNA7CEndg/PlRDIwmxb4Wka3Zyc/1Kxn84DlfdOjlGhs2huY=
  file:
    - docker-hub-cli.linux.amd64
    - docker-hub-cli.darwin.amd64
    - docker-hub-cli.windows.amd64.exe
  on:
    repo: sp0x/docker-hub-cli
    tags: true
